/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swingworkouttimer;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.Timer;

/**
 *
 * @author Katalin
 */
public class Foablak extends javax.swing.JFrame {

    /**
     * Creates new form Foablak
     */
    // private Timer main;
    
    int mainRest;
    int sumMinute;
    int sumSecond;
    int s;

    int intervalLeft;
    int intervalRight;

    int elapsedMin ;
    int elapsedSec;
    int remainingMin;
    int remainingSec;
    int mainSec;
    int mainEx;
    int mainMin;
    
    DecimalFormat dFormat = new DecimalFormat("00");
    String actTask;

    Timer main = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            mainSec--;

            if (mainSec == 0) {
                intervalLeft++;

                if (intervalLeft % 2 != 0) {
                    mainSec = mainEx;
                    actTask = "Exercise";
                }else if (intervalLeft % Integer.parseInt(tfNumOfExercises.getText()) == 0 && Integer.parseInt(tfNumOfExercises.getText())!=2 ) {
                    mainSec = Integer.parseInt(tfRestSet.getText());
                    actTask = "Rest";
                } else if (Integer.parseInt(tfNumOfExercises.getText())==2 && intervalLeft % (Integer.parseInt(tfNumOfExercises.getText())*Integer.parseInt(tfNumOfSets.getText())) == 0  ) {
                    mainSec = Integer.parseInt(tfRestSet.getText());
                    actTask = "Rest";}
                else if (intervalLeft % 2 == 0) {
                    mainSec = mainRest;
                    actTask = "Rest";
                } 
                
            }

            tpMainTimer.setText("");
            tpMainTimer.setText(dFormat.format(mainMin) + ":" + dFormat.format(mainSec));
            taShowTask.setText("");
            taShowTask.append(actTask);
            taIntervals.setText("");
            taIntervals.append(intervalLeft + "/" + intervalRight);
        }
    });

    Timer remaining = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            remainingSec--;
            if (remainingSec == -1) {
                remainingSec = 59;
                remainingMin--;
            }
            if (remainingMin == 0 && remainingSec == 0) {
                remaining.stop();
                elapsed.stop();
                main.stop();
                intervalLeft=intervalRight;
                taShowTask.setText("Workout complete!");
            }
            taRemaningTime.setText("");
            taRemaningTime.append(dFormat.format(remainingMin) + ":" + dFormat.format(remainingSec));
            taIntervals.setText("");
            taIntervals.append(intervalLeft + "/" + intervalRight);
        }
    });

    Timer elapsed = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            elapsedSec++;
            if (elapsedSec == 60) {
                elapsedSec = 0;
                elapsedMin++;
            }
            taElapsedTime.setText("");
            taElapsedTime.append(dFormat.format(elapsedMin) + ":" + dFormat.format(elapsedSec));
        }
    });

    public Foablak() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTimer = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        lbElapsed = new javax.swing.JLabel();
        lbInterval = new javax.swing.JLabel();
        lbRemaning = new javax.swing.JLabel();
        spElapsed = new javax.swing.JScrollPane();
        taElapsedTime = new javax.swing.JTextArea();
        spInterval = new javax.swing.JScrollPane();
        taIntervals = new javax.swing.JTextArea();
        spRemainingTime = new javax.swing.JScrollPane();
        taRemaningTime = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tpMainTimer = new javax.swing.JTextPane();
        pnlCreate = new javax.swing.JPanel();
        lblNumSets = new javax.swing.JLabel();
        lblSecExercise = new javax.swing.JLabel();
        lblNumExercises = new javax.swing.JLabel();
        lblRestInt = new javax.swing.JLabel();
        lblRestSet = new javax.swing.JLabel();
        btnCreateTimer = new javax.swing.JButton();
        lblTotalDuration = new javax.swing.JLabel();
        tfNumOfSets = new javax.swing.JTextField();
        tfNumOfExercises = new javax.swing.JTextField();
        tfSecOfExercise = new javax.swing.JTextField();
        tfRestInt = new javax.swing.JTextField();
        tfRestSet = new javax.swing.JTextField();
        jSPaneTotalDuration = new javax.swing.JScrollPane();
        taTotalDuration = new javax.swing.JTextArea();
        spTask = new javax.swing.JScrollPane();
        taShowTask = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnPause.setText("Pause");
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });

        lbElapsed.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbElapsed.setText("Elapsed time");

        lbInterval.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbInterval.setText("Interval");

        lbRemaning.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbRemaning.setText("Remaining time");

        spElapsed.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spElapsed.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spElapsed.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taElapsedTime.setEditable(false);
        taElapsedTime.setColumns(20);
        taElapsedTime.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        taElapsedTime.setRows(5);
        taElapsedTime.setAlignmentX(15.0F);
        taElapsedTime.setAlignmentY(25.0F);
        spElapsed.setViewportView(taElapsedTime);

        spInterval.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spInterval.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spInterval.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taIntervals.setEditable(false);
        taIntervals.setColumns(20);
        taIntervals.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        taIntervals.setRows(5);
        taIntervals.setAlignmentX(15.0F);
        taIntervals.setAlignmentY(25.0F);
        taIntervals.setAutoscrolls(false);
        spInterval.setViewportView(taIntervals);

        spRemainingTime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spRemainingTime.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spRemainingTime.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taRemaningTime.setEditable(false);
        taRemaningTime.setColumns(20);
        taRemaningTime.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        taRemaningTime.setRows(5);
        taRemaningTime.setAlignmentX(15.0F);
        taRemaningTime.setAlignmentY(25.0F);
        spRemainingTime.setViewportView(taRemaningTime);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setAlignmentX(30.0F);
        jScrollPane1.setAlignmentY(30.0F);

        tpMainTimer.setEditable(false);
        tpMainTimer.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        tpMainTimer.setAlignmentX(100.0F);
        tpMainTimer.setAlignmentY(80.0F);
        jScrollPane1.setViewportView(tpMainTimer);

        javax.swing.GroupLayout pnlTimerLayout = new javax.swing.GroupLayout(pnlTimer);
        pnlTimer.setLayout(pnlTimerLayout);
        pnlTimerLayout.setHorizontalGroup(
            pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimerLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lbElapsed)
                .addGap(89, 89, 89)
                .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTimerLayout.createSequentialGroup()
                        .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlTimerLayout.createSequentialGroup()
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlTimerLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(lbInterval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbRemaning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(88, 88, 88))
                    .addGroup(pnlTimerLayout.createSequentialGroup()
                        .addComponent(spInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(spRemainingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(pnlTimerLayout.createSequentialGroup()
                .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTimerLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(spElapsed, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTimerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTimerLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnPause, btnStart});

        pnlTimerLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {spElapsed, spInterval, spRemainingTime});

        pnlTimerLayout.setVerticalGroup(
            pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimerLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbElapsed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbInterval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbRemaning, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(spElapsed, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spRemainingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(pnlTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPause)
                    .addComponent(btnStart))
                .addGap(104, 104, 104))
        );

        pnlTimerLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnPause, btnStart});

        getContentPane().add(pnlTimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 530, 510));

        lblNumSets.setText("Number of sets:");

        lblSecExercise.setText("Duration of exercises (in seconds):");

        lblNumExercises.setText("Number of exercises:");

        lblRestInt.setText("Rest between intervals (in seconds):");

        lblRestSet.setText("Rest between sets (in seconds):");

        btnCreateTimer.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCreateTimer.setText("Create timer");
        btnCreateTimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTimerActionPerformed(evt);
            }
        });

        lblTotalDuration.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTotalDuration.setText("Total duration:");

        jSPaneTotalDuration.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSPaneTotalDuration.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSPaneTotalDuration.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taTotalDuration.setEditable(false);
        taTotalDuration.setColumns(20);
        taTotalDuration.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        taTotalDuration.setRows(5);
        taTotalDuration.setAlignmentX(16.0F);
        taTotalDuration.setAlignmentY(0.0F);
        jSPaneTotalDuration.setViewportView(taTotalDuration);

        spTask.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        spTask.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spTask.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taShowTask.setColumns(20);
        taShowTask.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        taShowTask.setRows(5);
        spTask.setViewportView(taShowTask);

        javax.swing.GroupLayout pnlCreateLayout = new javax.swing.GroupLayout(pnlCreate);
        pnlCreate.setLayout(pnlCreateLayout);
        pnlCreateLayout.setHorizontalGroup(
            pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateLayout.createSequentialGroup()
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCreateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSPaneTotalDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlCreateLayout.createSequentialGroup()
                                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNumExercises)
                                    .addComponent(lblRestInt)
                                    .addComponent(lblRestSet)
                                    .addComponent(lblNumSets)
                                    .addComponent(lblSecExercise))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfNumOfSets, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNumOfExercises, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfSecOfExercise, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfRestInt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfRestSet, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnlCreateLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTotalDuration)
                            .addComponent(btnCreateTimer)))
                    .addComponent(spTask, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pnlCreateLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfNumOfExercises, tfNumOfSets, tfRestInt, tfRestSet, tfSecOfExercise});

        pnlCreateLayout.setVerticalGroup(
            pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumSets)
                    .addComponent(tfNumOfSets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumExercises)
                    .addComponent(tfNumOfExercises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSecExercise)
                    .addComponent(tfSecOfExercise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestInt)
                    .addComponent(tfRestInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestSet)
                    .addComponent(tfRestSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateTimer)
                .addGap(18, 18, 18)
                .addGroup(pnlCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalDuration, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSPaneTotalDuration, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(spTask, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        getContentPane().add(pnlCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 599));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateTimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTimerActionPerformed
        s = ((Integer.parseInt(tfNumOfExercises.getText()) * Integer.parseInt(tfSecOfExercise.getText())) * Integer.parseInt(tfNumOfSets.getText()))
                + (((Integer.parseInt(tfNumOfExercises.getText()) - 1) * Integer.parseInt(tfRestInt.getText()))
                * Integer.parseInt(tfNumOfSets.getText())) + ((Integer.parseInt(tfNumOfSets.getText()) - 1) * Integer.parseInt(tfRestSet.getText()));
        if (s > 0) {
            sumSecond = s % 60;
            sumMinute = (s / 60) % 60;
        } else {
            sumMinute = 0;
            sumSecond = 0;
        }

        mainEx = Integer.parseInt(tfSecOfExercise.getText());
        mainRest = Integer.parseInt(tfRestInt.getText());
        mainMin = 0;
        mainSec = mainEx;

        intervalRight = (Integer.parseInt(tfNumOfSets.getText()) * Integer.parseInt(tfNumOfExercises.getText()))
                + ((Integer.parseInt(tfNumOfExercises.getText()) - 1) * Integer.parseInt(tfNumOfSets.getText()))
                + (Integer.parseInt(tfNumOfSets.getText()) - 1);
        intervalLeft = 1;

        remainingMin = sumMinute;
        remainingSec = sumSecond;
        elapsedMin = 0;
        elapsedSec = 0;

        actTask = "Exercise";

        if (taTotalDuration.getText().equals("")) {
            taTotalDuration.append(dFormat.format(sumMinute) + ":" + dFormat.format(sumSecond));
        } else {
            taTotalDuration.setText("");
            taTotalDuration.append(dFormat.format(sumMinute) + ":" + dFormat.format(sumSecond));
        }

        if (taIntervals.getText().equals("")) {
            taIntervals.append(intervalLeft + "/" + intervalRight);
        } else {
            taIntervals.setText("");
            taIntervals.append(intervalLeft + "/" + intervalRight);
        }

        if (taElapsedTime.getText().equals("")) {
            taElapsedTime.append(dFormat.format(elapsedMin) + ":" + dFormat.format(elapsedSec));
        } else {
            taElapsedTime.setText("");
            taElapsedTime.append(dFormat.format(elapsedMin) + ":" + dFormat.format(elapsedSec));
        }

        if (taRemaningTime.getText().equals("")) {
            taRemaningTime.append(dFormat.format(remainingMin) + ":" + dFormat.format(remainingSec));
        } else {
            taRemaningTime.setText("");
            taRemaningTime.append(dFormat.format(remainingMin) + ":" + dFormat.format(remainingSec));
        }
        if (tpMainTimer.getText().equals("")) {
            tpMainTimer.setText(dFormat.format(mainMin) + ":" + dFormat.format(mainSec));
        } else {
            tpMainTimer.setText("");
            tpMainTimer.setText(dFormat.format(mainMin) + ":" + dFormat.format(mainSec));
        }

        if (taShowTask.getText().equals("")) {
            taShowTask.append(actTask);
        } else {
            taShowTask.setText("");
            taShowTask.append(actTask);
        }


    }//GEN-LAST:event_btnCreateTimerActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        main.start();
        elapsed.start();
        remaining.start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        main.stop();
        elapsed.stop();
        remaining.stop();
    }//GEN-LAST:event_btnPauseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Foablak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateTimer;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnStart;
    private javax.swing.JScrollPane jSPaneTotalDuration;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbElapsed;
    private javax.swing.JLabel lbInterval;
    private javax.swing.JLabel lbRemaning;
    private javax.swing.JLabel lblNumExercises;
    private javax.swing.JLabel lblNumSets;
    private javax.swing.JLabel lblRestInt;
    private javax.swing.JLabel lblRestSet;
    private javax.swing.JLabel lblSecExercise;
    private javax.swing.JLabel lblTotalDuration;
    private javax.swing.JPanel pnlCreate;
    private javax.swing.JPanel pnlTimer;
    private javax.swing.JScrollPane spElapsed;
    private javax.swing.JScrollPane spInterval;
    private javax.swing.JScrollPane spRemainingTime;
    private javax.swing.JScrollPane spTask;
    private javax.swing.JTextArea taElapsedTime;
    private javax.swing.JTextArea taIntervals;
    private javax.swing.JTextArea taRemaningTime;
    private javax.swing.JTextArea taShowTask;
    private javax.swing.JTextArea taTotalDuration;
    private javax.swing.JTextField tfNumOfExercises;
    private javax.swing.JTextField tfNumOfSets;
    private javax.swing.JTextField tfRestInt;
    private javax.swing.JTextField tfRestSet;
    private javax.swing.JTextField tfSecOfExercise;
    private javax.swing.JTextPane tpMainTimer;
    // End of variables declaration//GEN-END:variables
}
